// ##############################
// Reduced Motion
// ##############################

@mixin reduced-motion() {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

@mixin no-reduced-motion() {
  @media (prefers-reduced-motion: no-preference) {
    @content;
  }
}


// ##############################
// Mouse only
// ##############################

@mixin mouse-only() {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

// ##############################
// Forced colors
// ##############################

@mixin forced-colors() {
  @media (forced-colors: active) {
    @content
  }
}

// ##############################
// Forced colors
// ##############################
@mixin more-contrast() {
  @media (prefers-contrast: more) {
    @content
  }
}

// ##############################
// Inverted colors
// ##############################

@mixin inverted-colors() {
  @media (inverted-colors: inverted) {
    @content
  }
}

// ##############################
// Color scheme
// ##############################

@mixin color-scheme-dark() {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// ##############################
// Breakpoints
// Inspired by: https://github.com/sass-mq/sass-mq
// ##############################

// breakpoints
$breakpoint-zero-min: 0;
$breakpoint-micro-min: 320;
$breakpoint-sm-min: 640;
$breakpoint-md-min: 768;
$breakpoint-lg-min: 1024;
$breakpoint-x-lg-min: 1280;
$breakpoint-xx-lg-min: 1440;

// breakpoint map
$mq-breakpoints: (
  zero: 0,
  micro: 320,
  sm: 640,
  md: 768,
  lg: 1024,
  xlg: 1280,
  xxlg: 1440,
) !default;

// media type
$mq-media-type: all !default;

@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {
  @if map-has-key($breakpoints, $name) {
    @return map-get($breakpoints, $name);
  } @else {
    @warn "Breakpoint #{$name} wasn't found in $breakpoints.";
  }
}

@mixin breakpoint(
  $from: false,
  $to: false,
  $and: false,
  $media-type: $mq-media-type,
  $breakpoints: $mq-breakpoints,
) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  // From: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: $from * 1px;
    } @else {
      $min-width: mq-get-breakpoint-width($from, $breakpoints) * 1px;
    }
  }

  // Until: that breakpoint (exclusive)
  @if $to {
    @if type-of($to) == number {
      $max-width: $to * 1px;
    } @else {
      $max-width: mq-get-breakpoint-width($to, $breakpoints) * 1px;
    }
  }

  @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }

  @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }

  @if $and { $media-query: '#{$media-query} and #{$and}'; }

  // Remove unnecessary media query prefix 'all and '
  @if $media-type == 'all' and $media-query != '' {
    $media-type: '';

    /* stylelint-disable scss/no-global-function-names */
    $media-query: str-slice($media-query, 6);
    /* stylelint-enable scss/no-global-function-names */
  }

  @media #{$media-type + $media-query} {
    @content;
  }

}
