---
// import { getLocale } from 'astro-i18n-aut';
// import { useTranslations } from '../i18n/utils';
import Layout from '../layouts/Layout.astro';
// import MainContainer from '../components/MainContainer.astro';
// import Section from '../components/Section.astro';
// import ContentCardGrid from '../components/ContentCardGrid.astro';
// import ContentCard from '../components/ContentCard.astro';
// import Contact from '../components/Contact.astro';
// import LeadText from '../components/LeadText.astro';
// import PageTitle from '../components/PageTitle.astro';
// import Logo from '../components/Logo.astro';
// import Heading from '../components/Heading.astro';
// import Footer from '../components/Footer.astro';
// import AvatarCardGrid from '../components/AvatarCardGrid.astro';
// import AvatarCard from '../components/AvatarCard.astro';
// import Avatar from '../components/Avatar.astro';
// import imageYves from '../images/yves.jpg';

// const locale = getLocale(Astro.url);
// const t = useTranslations(locale);

import Form from '../components/Form/Form';

const formConfig = {
  button: {
    click: false,
    color: 'primary',
    iconAfter: false,
    iconBefore: false,
    label: 'Submit',
    outline: false,
    size: 'l',
    type: 'submit',
  },

  fieldsets: [
    {
      fields: [
        {
          element: {
            name: 'email',
            props: {
              classes: '',
              disabled: false,
              label: {
                inputId: 'input-id',
                text: 'Your e-mail Address',
              },
              name: 'email',
              placeholder: 'e-mail address',
              required: false,
              type: 'email',
            },
          },
          name: 'email',
          validate: [
            {
              text: 'Please enter your email.',
              type: 'required',
            },
            {
              text: 'The email address is badly formatted.',
              type: 'email',
            },
          ],
        },
        {
          element: {
            name: 'Textarea',
            props: {
              cols: '30',
              disabled: false,
              id: 'textarea-id',
              label: {
                inputId: 'textarea-id',
                text: 'What do you have to say?',
              },
              name: 'textarea-name',
              placeholder: 'Your comments...',
              required: true,
              rows: '5',
            },
          },
          name: 'text',
          validate: [
            {
              text: 'Please enter your request.',
              type: 'required',
            },
          ],
        },
      ],
      legend: {
        hidden: true,
        text: 'Contact form',
      },
    },
  ],
};

---

<Layout>

  <h1>Contact Form Test</h1>
  <Form
    data-contact-form
    client:load
    {...formConfig}
  />

  <!--
  <MainContainer>
    <Logo />

    <PageTitle
      text={t('page.title')}
      highlight={t('site.title')}
    />

    <LeadText text={t('page.leadText')}/>

    <Section>
      <Heading
        text={t('page.whatWeDo.title')}
        level="2"
      />

      <ContentCardGrid>
        <ContentCard
          title="Some title"
          body="Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Cras mattis consectetur purus sit amet fermentum."
        />
        <ContentCard
          title="Some title"
          body="foo bar"
        />
      </ContentCardGrid>
    </Section>

    <Section>
      <Heading
        text={t('page.contactUs.title')}
        level="2"
      />

      <Contact />
    </Section>

    <Section>
      <Heading
        text={t('page.whoWeAre.title')}
        level="2"
      />

      <AvatarCardGrid>
        <AvatarCard
          title={t('page.whoWeAre.marius.title')}
          subtitle={t('page.whoWeAre.marius.subtitle')}
          text={t('page.whoWeAre.marius.description')}
        >
          <Avatar
            image={imageYves}
            alt={t('page.whoWeAre.marius.imageAlt')}
            width="64"
            height="64"
          />
        </AvatarCard>
        <AvatarCard
          title={t('page.whoWeAre.yves.title')}
          subtitle={t('page.whoWeAre.yves.subtitle')}
          text={t('page.whoWeAre.yves.description')}
        >
          <Avatar
            image={imageYves}
            alt={t('page.whoWeAre.yves.imageAlt')}
            width="64"
            height="64"
          />
        </AvatarCard>
      </AvatarCardGrid>
    </Section>

  </MainContainer>

  <Footer />
  -->
</Layout>

<script>
  import formEvents from '../components/Form/Form.events';

  window.addEventListener(formEvents.submitForm, async (evt) => {

    const {
      email,
      text,
    } = evt.detail;

    const message = `
    Contact form on vorhall.com filled out.<br><br>
    from: ${email}<br><br>

    message:
    ${text}
    `;

    const url = '/.netlify/functions/send-mail';

    const data = {
      from: 'Vorhall.com Contact <vorhall@resend.dev>',
      message,
      subject: 'Contact form on vorhall.com',
      to: 'vorhall23@gmail.com',
    };

    const options = {
      body: JSON.stringify(data),
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json',
      },
      method: 'POST',
    };

    try {
      const response = await fetch(url, options);
      const responseData = await response.text();
      const responseDataParsed = JSON.parse(responseData);

      if (responseDataParsed.statusCode !== 200) {
        console.log('There was an error sending the mail');
        console.log(responseDataParsed);

        return;
      }

      console.log('E-Mail successfully send');

    } catch (e) {
      console.log(e);
    }
  });

</script>
