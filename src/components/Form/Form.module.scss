@use '/src/styles/functions' as fn;
@use '/src/styles/mediaqueries' as mq;
@use '/src/styles/mixins' as mx;

:root {
  @include mx.container-centered-variables;

  --form-privacy-note-color: var(--color-gray-500);
  --form-gap-v: var(--spacing-6);
  --form-max-width: var(--spacing-96);

  @include mq.color-scheme-dark {
    --form-privacy-note-color: var(--color-gray-400);
  }

  @include mq.breakpoint($from: md) {
    --form-gap-v: var(--spacing-8);
  }
}

.form {
  @include mx.container-s;
  display: flex;
  flex-direction: column;
  gap: fn.to-rem(var(--spacing-6)) fn.to-rem(var(--spacing-4));

  main section:not(:first-child) & {
    content-visibility: auto;
  }

  &__fieldset {
    display: flex;
    flex-direction: column;
    gap: fn.to-rem(var(--form-gap-v)) fn.to-rem(var(--spacing-4));

    @include mq.breakpoint($from: md) {
      flex-flow: row wrap;
    }

  }

  &__privacy-note {
    color: var(--form-privacy-note-color);
    font-size: fn.to-rem(var(--text-sm));

    a {
      text-underline-offset: fn.to-rem(var(--spacing-1));
    }

  }

  &--fade-enter-active,
  &--fade-exit-active {
    @include mx.default-transition;
    transition-property: opacity;
    transition-duration: var(--transition-long-duration);
  }

  &--fade-enter,
  &--fade-exit-to {
    opacity: 0;
  }

  &__success-message {
    max-width: fn.to-rem(var(--form-max-width));
    margin: 0 auto;
  }
}
